(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{169:function(t,e,r){"use strict";r.r(e);var s=r(0),i=Object(s.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),r("p",[t._v("SYN、ACK、Seq是什么?")]),t._v(" "),r("p",[t._v("位码即tcp标志位，有6种标志位：SYN(建立联机), ACK(确认), PSH(传送), FIN(结束), RST(重置), URG(紧急), Sequence number(顺序号码), Ackknowledge number(确认号码)")]),t._v(" "),t._m(1),t._v(" "),r("p",[t._v("第一次：client发出连接请求，SYN=1, 生成随机值Seq=123456，server接收到SYN=1知道client要求联机（SYN）")]),t._v(" "),r("p",[t._v("第二次：server生成随机号码ack = Seq + 1, 也生成了随机值 Seq = 34567; SYN=1, ACK=1携带发送给客户端 （SYN + ACK）")]),t._v(" "),r("p",[t._v("第三次：client接收到server携带的请求, 根据ACK=1判断之前发出的Seq + 1是否等于接收到的ack，若正确，则A再发送ACK=1, ack=接收到的Seq+1, server判断接收到的ack是否等于之前发出的Seq + 1 (ACK), 若正确, 连接建立")]),t._v(" "),t._m(2),t._v(" "),r("p",[t._v("假设是两次握手: 服务端和客户端各握手一次\n假设期间网络波动产生延迟, 在到达服务端时连接失效或者早已失效, 服务端会认为是一个新的连接请求, 接收连接并回应给客户端,\n但客户端对于服务端的回应不予理睬, 不再发请求, 这时候服务端会等待客户端发后续的请求，一直夯在那里, 浪费资源")]),t._v(" "),t._m(3),t._v(" "),r("p",[t._v("https相比http多了一层ssl/tsl, https采用的是对称加密和非对称加密结合的方式")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),r("p",[t._v("n台主机间的交互")]),t._v(" "),t._m(6),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.runoob.com/w3cnote/http-vs-https.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),r("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念","aria-hidden":"true"}},[this._v("#")]),this._v(" 概念")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"tcp三次握手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp三次握手","aria-hidden":"true"}},[this._v("#")]),this._v(" tcp三次握手")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"为啥三次握手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为啥三次握手","aria-hidden":"true"}},[this._v("#")]),this._v(" 为啥三次握手")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"https协议vshttp协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#https协议vshttp协议","aria-hidden":"true"}},[this._v("#")]),this._v(" https协议vshttp协议")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("client向server发起请求, 服务端将公钥public_1返回给客户端")]),this._v(" "),e("li",[this._v("客户端生成用于加解密传输内容的公钥public_2, 使用public_1加密public_2, 传给server")]),this._v(" "),e("li",[this._v("server接收到加密后的public_2, 使用私钥解密获取加密前的public_2")]),this._v(" "),e("li",[this._v("之后客户端和服务端内容的传输都用public_2加解密")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"对称加密vs非对称加密"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对称加密vs非对称加密","aria-hidden":"true"}},[this._v("#")]),this._v(" 对称加密vs非对称加密")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("table",[r("thead",[r("tr",[r("th",[t._v("加密方式")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("速度")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("密钥数量")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("对称")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("快")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("n*(n-1)")])]),t._v(" "),r("tr",[r("td",[t._v("非对称")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("慢")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("n对")])])])])}],!1,null,null,null);i.options.__file="http.md";e.default=i.exports}}]);