(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{162:function(t,a,s){t.exports=s.p+"assets/img/git-merge.96bfcc35.jpg"},163:function(t,a,s){t.exports=s.p+"assets/img/git-rebase.ae63af86.jpg"},164:function(t,a,s){t.exports=s.p+"assets/img/git-rebase-edit.b7940522.jpg"},165:function(t,a,s){t.exports=s.p+"assets/img/git-revert.bef250c2.png"},201:function(t,a,s){"use strict";s.r(a);var e=[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h2",{attrs:{id:"常用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用")]),t._v(" "),e("h3",{attrs:{id:"git-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-log","aria-hidden":"true"}},[t._v("#")]),t._v(" git log")]),t._v(" "),e("ul",[e("li",[t._v("git log --grep=${关键字} // 根据关键字过滤log信息")])]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("这个需要开发人员commit信息比较规范")]),t._v(" "),e("p",[t._v("如：开发了任务单167，commit信息为 feat: taskID 167完成")]),t._v(" "),e("p",[t._v("修改了线上bug， fix: hotfixID 178")]),t._v(" "),e("p",[t._v("eg: git log --grep=taskID 167 // 可过滤出任务id167的所有提交")])]),t._v(" "),e("h3",{attrs:{id:"git-cherry-pick"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-cherry-pick","aria-hidden":"true"}},[t._v("#")]),t._v(" git cherry-pick")]),t._v(" "),e("ul",[e("li",[t._v("git cherry-pick {commit hash值} // 适用场景：分支A和分支B，分支A需要分支B的某一个commit提交的代码")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("a - b - c - d master\n      \\\n        e - f - g feature\n")])])]),e("ul",[e("li",[t._v("git cherry-pick f")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("a - b - c - d - f master // f被添加\n      \\\n        e - f - g feature\n")])])]),e("ul",[e("li",[t._v("git cherry-pick f g // 多个")]),t._v(" "),e("li",[t._v("git cherry-pick e..g // f g, 不包括e")]),t._v(" "),e("li",[t._v("git cherry-pick e^..g // e f g, 包括e")])]),t._v(" "),e("h3",{attrs:{id:"git-merge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-merge","aria-hidden":"true"}},[t._v("#")]),t._v(" git merge")]),t._v(" "),e("ul",[e("li",[t._v("观察commit记录，会交叉混合，你可以想象一种场景：左右手各持一副牌，洗牌的场景，每张牌就是每条commit\n"),e("img",{attrs:{src:s(162),alt:"git-merge"}})])]),t._v(" "),e("h3",{attrs:{id:"暂时抛弃某个commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#暂时抛弃某个commit","aria-hidden":"true"}},[t._v("#")]),t._v(" 暂时抛弃某个commit")]),t._v(" "),e("ul",[e("li",[t._v("git rebase -i ${commitID} // 发布当晚因为不可抗力需要把某个commit暂时去掉\n"),e("ul",[e("li",[t._v("git log")]),t._v(" "),e("li",[t._v("找到合入master的feature/dev_1的前一个commitID")]),t._v(" "),e("li",[t._v("git rebase -i ${第二步的commitID}\n"),e("img",{attrs:{src:s(163),alt:"git-reabse"}})]),t._v(" "),e("li",[t._v("终端会进入一个修改页面，把feature/dev_1对应commit前面的pick改成drop, 类似vim保存推出\n"),e("img",{attrs:{src:s(164),alt:"git-rebase-edit"}})])])])]),t._v(" "),e("h3",{attrs:{id:"彻底删除某个commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#彻底删除某个commit","aria-hidden":"true"}},[t._v("#")]),t._v(" 彻底删除某个commit")]),t._v(" "),e("ul",[e("li",[t._v("git revert ${commitID}")])]),t._v(" "),e("p",[t._v("// 如果需要把某个已经合入的分支A全部回退，需要找到merge产生的commitID\n"),e("img",{attrs:{src:s(165),alt:"git-revert"}})]),t._v(" "),e("div",{staticClass:"language-md extra-class"},[e("pre",{pre:!0,attrs:{class:"language-md"}},[e("code",[t._v("error: commit 9960d11f3c7088b963a1593a120ecc4b6d70ae10 is a merge but no -m option was given.\nfatal: revert failed\n\n根据错误提示，需要添加-m(mainline)参数, 意思是保留哪一个，一般是1，维持原主线；\ngit revert -m 1 ${commitID} \n")])])]),e("ul",[e("li",[t._v("如果又需要把分支A再次合入，执行merge A是无法合入的，需要revert上一次revert产生的commit")])]),t._v(" "),e("p",[t._v("git revert ${revertCommitID}")]),t._v(" "),e("h2",{attrs:{id:"git-subtree"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-subtree","aria-hidden":"true"}},[t._v("#")]),t._v(" git subtree")]),t._v(" "),e("ul",[e("li",[t._v("某些模块（commonComp）需要被项目A和项目B或者更多项目公用, 开发过程中npm管理的方式会导致发包太频繁；可以在项目A和项目B中将commonComp以subtree的方式管理")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" cd "),e("span",{attrs:{class:"token constant"}},[t._v("A")]),t._v("\n"),e("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" git remote add $"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("commonComp的remote名"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" $"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("仓库地址"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" git subtree add"),e("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("pull"),e("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("push "),e("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("prefix"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("commonComp $"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("remote名"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" $"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("分支"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("squash\n"),e("span",{attrs:{class:"token comment"}},[t._v("// 项目A中对commonComp进行改动，git subtree push")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("// 项目B中需要用到A对于commonComp的改动，git subtree pull")]),t._v("\n随着项目的开发，git subtree push会过滤越来越多的commit，可以用下面的命令，在最新的commit打一个标记（下次过滤的新起点）\ngit subtree split "),e("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("rejoin "),e("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("prefix"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("commonComp "),e("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("branch $"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("tagName"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],r=s(0),i=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},e,!1,null,null,null);i.options.__file="git-more.md";a.default=i.exports}}]);